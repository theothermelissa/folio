generator client {
  provider   = "prisma-client-js"
  engineType = "dataproxy"
}

datasource db {
  provider          = "postgresql"
  url               = env("POSTGRES_PRISMA_URL") // uses connection pooling
  directUrl         = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
}

model User {
  id         Int            @id @default(autoincrement())
  email      String?        @unique
  name       String?
  image      String?
  phone      String?        @unique
  authId     String?        @unique
  ownedFeeds Feed[]
  posts      Post[]
  projects   Project[]
  feeds      UsersOnFeeds[]
}

model Feed {
  id           Int            @id @default(autoincrement())
  subdomain    String         @unique
  ownerId      Int
  owner        User           @relation(fields: [ownerId], references: [id])
  posts        Post[]
  contributors UsersOnFeeds[]
}

model UsersOnFeeds {
  id        Int      @id @default(autoincrement())
  feedId    Int
  userId    Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  userPhone String
  feedPhone String
  feed      Feed     @relation(fields: [feedId], references: [id])
  user      User     @relation(fields: [userId], references: [id])
}

model Tag {
  id       Int       @id @default(autoincrement())
  name     String    @unique
  projects Project[] @relation("ProjectToTag")
}

model Project {
  id            Int      @id @default(autoincrement())
  title         String?
  content       String?
  published     Boolean  @default(false)
  publishedDate DateTime @default(now())
  authorId      Int?
  author        User?    @relation(fields: [authorId], references: [id])
  tags          Tag[]    @relation("ProjectToTag")
}

model Post {
  id            Int      @id @default(autoincrement())
  title         String   @default("")
  content       String   @default("")
  publishedDate DateTime @default(now())
  authorId      Int?
  published     Boolean  @default(false)
  media         String[] @default([])
  feedId        Int?
  textMessageId String?  @unique
  author        User?    @relation(fields: [authorId], references: [id])
  feed          Feed?    @relation(fields: [feedId], references: [id])
}
